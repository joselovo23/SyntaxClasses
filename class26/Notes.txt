Abstraction in Java:
    Hiding the implementation details and providing the functionality only.
Two Methods to achieve abstractions:
    1) Abstract classes
    2)Interfaces
Abstract classes:
    Abstract classes are classes with abstract keyword.
Interfaces:
    Interfaces are the contracts that we create with the help of interface keyword.
How to decide which one to use:
1) Prefer the interfaces over abstract classes.
2) If two or more classes are closely related each other, go with Abstract classes
ex: If we have to create a Lion class and a horse class, we should go with Abstract classes and should create an
animal abstract class.
If two classes are not related to each other, for example, an Apple and a Cloth (both can be washable..same behavior/field)
We should create an interface for that like if we want to have a behavior "washAble"
Encapsulation:
It is the fourth pillar of OOPS. It provides security and better control over the data of
a class.
We create classes and inside those classes we create private fields and methods
These methods are called getter setter methods and we set and get the values of the class
fields with the help of these methods instead of accessing and modifying them directly.
